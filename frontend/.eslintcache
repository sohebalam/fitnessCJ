[{"C:\\Projects\\December 2020\\newfitness\\frontend\\src\\index.js":"1","C:\\Projects\\December 2020\\newfitness\\frontend\\src\\App.js":"2","C:\\Projects\\December 2020\\newfitness\\frontend\\src\\routes.js":"3","C:\\Projects\\December 2020\\newfitness\\frontend\\src\\pages\\Login\\Login.js":"4","C:\\Projects\\December 2020\\newfitness\\frontend\\src\\services\\api.js":"5","C:\\Projects\\December 2020\\newfitness\\frontend\\src\\pages\\Register\\Register.js":"6","C:\\Projects\\December 2020\\newfitness\\frontend\\src\\pages\\styles.js":"7","C:\\Projects\\December 2020\\newfitness\\frontend\\src\\pages\\Dashboard\\FeaturedPost.js":"8","C:\\Projects\\December 2020\\newfitness\\frontend\\src\\pages\\Dashboard\\EventsForm.js":"9","C:\\Projects\\December 2020\\newfitness\\frontend\\src\\pages\\Dashboard\\Dashboard.js":"10","C:\\Projects\\December 2020\\fitness2\\frontend\\src\\index.js":"11","C:\\Projects\\December 2020\\fitness2\\frontend\\src\\App.js":"12","C:\\Projects\\December 2020\\fitness2\\frontend\\src\\routes.js":"13","C:\\Projects\\December 2020\\fitness2\\frontend\\src\\pages\\Dashboard\\Dashboard.js":"14","C:\\Projects\\December 2020\\fitness2\\frontend\\src\\pages\\Login\\Login.js":"15","C:\\Projects\\December 2020\\fitness2\\frontend\\src\\pages\\Register\\Register.js":"16","C:\\Projects\\December 2020\\fitness2\\frontend\\src\\pages\\Dashboard\\EventsForm.js":"17","C:\\Projects\\December 2020\\fitness2\\frontend\\src\\services\\api.js":"18","C:\\Projects\\December 2020\\fitness2\\frontend\\src\\pages\\styles.js":"19","C:\\Projects\\December 2020\\fitness2\\frontend\\src\\pages\\Dashboard\\FeaturedPost.js":"20"},{"size":220,"mtime":1608420536744,"results":"21","hashOfConfig":"22"},{"size":250,"mtime":1608420536704,"results":"23","hashOfConfig":"22"},{"size":648,"mtime":1608718896466,"results":"24","hashOfConfig":"22"},{"size":3683,"mtime":1608755468199,"results":"25","hashOfConfig":"22"},{"size":118,"mtime":1608420536931,"results":"26","hashOfConfig":"22"},{"size":4948,"mtime":1608756501888,"results":"27","hashOfConfig":"22"},{"size":467,"mtime":1608577859765,"results":"28","hashOfConfig":"22"},{"size":2685,"mtime":1608751583318,"results":"29","hashOfConfig":"22"},{"size":4871,"mtime":1608763227835,"results":"30","hashOfConfig":"22"},{"size":5459,"mtime":1608770603911,"results":"31","hashOfConfig":"22"},{"size":220,"mtime":1608420536744,"results":"32","hashOfConfig":"33"},{"size":250,"mtime":1608420536704,"results":"34","hashOfConfig":"33"},{"size":648,"mtime":1608718896466,"results":"35","hashOfConfig":"33"},{"size":5460,"mtime":1608804139292,"results":"36","hashOfConfig":"33"},{"size":3683,"mtime":1608755468199,"results":"37","hashOfConfig":"33"},{"size":4948,"mtime":1608756501888,"results":"38","hashOfConfig":"33"},{"size":4871,"mtime":1608763227835,"results":"39","hashOfConfig":"33"},{"size":118,"mtime":1608420536931,"results":"40","hashOfConfig":"33"},{"size":467,"mtime":1608577859765,"results":"41","hashOfConfig":"33"},{"size":2939,"mtime":1608805059965,"results":"42","hashOfConfig":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"xo4hzy",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"tcx2uu",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},"C:\\Projects\\December 2020\\newfitness\\frontend\\src\\index.js",[],["90","91"],"C:\\Projects\\December 2020\\newfitness\\frontend\\src\\App.js",[],"C:\\Projects\\December 2020\\newfitness\\frontend\\src\\routes.js",[],"C:\\Projects\\December 2020\\newfitness\\frontend\\src\\pages\\Login\\Login.js",["92"],"C:\\Projects\\December 2020\\newfitness\\frontend\\src\\services\\api.js",[],"C:\\Projects\\December 2020\\newfitness\\frontend\\src\\pages\\Register\\Register.js",["93"],"C:\\Projects\\December 2020\\newfitness\\frontend\\src\\pages\\styles.js",[],"C:\\Projects\\December 2020\\newfitness\\frontend\\src\\pages\\Dashboard\\FeaturedPost.js",["94","95","96"],"C:\\Projects\\December 2020\\newfitness\\frontend\\src\\pages\\Dashboard\\EventsForm.js",["97","98","99","100","101","102"],"C:\\Projects\\December 2020\\newfitness\\frontend\\src\\pages\\Dashboard\\Dashboard.js",["103","104"],"C:\\Projects\\December 2020\\fitness2\\frontend\\src\\index.js",[],["105","106"],"C:\\Projects\\December 2020\\fitness2\\frontend\\src\\App.js",[],"C:\\Projects\\December 2020\\fitness2\\frontend\\src\\routes.js",[],"C:\\Projects\\December 2020\\fitness2\\frontend\\src\\pages\\Dashboard\\Dashboard.js",["107","108"],"import React, { useEffect, useState } from \"react\"\r\nimport api from \"../../services/api\"\r\nimport useStyles from \"../styles\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport { Button, ButtonGroup, CssBaseline, Box } from \"@material-ui/core\"\r\nimport socketio from \"socket.io-client\"\r\n\r\nimport FeaturedPost from \"./FeaturedPost\"\r\nimport { Alert } from \"@material-ui/lab\"\r\n\r\nconst Dashboard = ({ history }) => {\r\n  const classes = useStyles()\r\n  const [events, setEvents] = useState([])\r\n  const user_id = localStorage.getItem(\"user_id\")\r\n  const user = localStorage.getItem(\"user\")\r\n  const [rselected, setRselected] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(false)\r\n  const [success, setSuccess] = useState(false)\r\n  useEffect(() => {\r\n    getEvents()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const socket = socketio(\"http://localhost:8000\")\r\n  }, [])\r\n\r\n  const filterHandler = (query) => {\r\n    setRselected(query)\r\n    getEvents(query)\r\n  }\r\n\r\n  const myEventsHandler = async () => {\r\n    try {\r\n      setRselected(\"myevents\")\r\n\r\n      const response = await api.get(\"/user/events\", {\r\n        headers: { user: user },\r\n      })\r\n      setEvents(response.data.events)\r\n    } catch (error) {\r\n      history.push(\"/login\")\r\n    }\r\n  }\r\n\r\n  const getEvents = async (filter) => {\r\n    try {\r\n      const url = filter ? `/dashboard/${filter}` : \"/dashboard\"\r\n\r\n      const response = await api.get(url, { headers: { user: user } })\r\n\r\n      setEvents(response.data.events)\r\n    } catch (error) {\r\n      history.push(\"/login\")\r\n    }\r\n  }\r\n\r\n  const deleteEventHandler = async (eventId) => {\r\n    try {\r\n      await api.delete(`/event/${eventId}`, { headers: { user: user } })\r\n      setSuccess(true)\r\n      setTimeout(() => {\r\n        filterHandler(null)\r\n        setSuccess(false)\r\n      }, 1000)\r\n    } catch (error) {\r\n      setErrorMessage(true)\r\n      setTimeout(() => {\r\n        setErrorMessage(false)\r\n      }, 2000)\r\n    }\r\n  }\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"user_id\")\r\n    localStorage.removeItem(\"user\")\r\n    history.push(\"/login\")\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        Filter:\r\n        <ButtonGroup\r\n          variant=\"text\"\r\n          color=\"primary\"\r\n          aria-label=\"text primary button group\"\r\n        >\r\n          <Button\r\n            onClick={() => filterHandler(null)}\r\n            active={rselected === null}\r\n          >\r\n            All Sports\r\n          </Button>\r\n          <Button onClick={myEventsHandler} active={rselected === \"myevents\"}>\r\n            My Events\r\n          </Button>\r\n\r\n          <Button\r\n            onClick={() => filterHandler(\"running\")}\r\n            active={rselected === \"running\"}\r\n          >\r\n            {\" \"}\r\n            Running\r\n          </Button>\r\n          <Button\r\n            onClick={() => filterHandler(\"cycling\")}\r\n            active={rselected === \"cycling\"}\r\n          >\r\n            Cycling\r\n          </Button>\r\n          <Button\r\n            onClick={() => filterHandler(\"swimming\")}\r\n            active={rselected === \"swimming\"}\r\n          >\r\n            Swimming\r\n          </Button>\r\n        </ButtonGroup>\r\n        <ButtonGroup style={{ marginLeft: \"5rem\", marginBottom: \"2rem\" }}>\r\n          <Button color=\"secondary\" onClick={() => history.push(\"events\")}>\r\n            Events{\" \"}\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={logoutHandler}>\r\n            Logout{\" \"}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </div>\r\n      <CssBaseline />\r\n      <main>\r\n        <Grid container spacing={4} className={classes.mainGrid}>\r\n          {events.map((post) => (\r\n            <FeaturedPost key={post._id} post={post} />\r\n            // <Dashboard key={post.title} post={post} />\r\n          ))}{\" \"}\r\n          <Grid container style={{ marginLeft: \"2rem\", marginBottom: \"3rem\" }}>\r\n            {\" \"}\r\n            {events.map((post) =>\r\n              post.user === user_id ? (\r\n                <div key={post._id}>\r\n                  <Box style={{ marginLeft: \"2rem\", marginTop: \"2rem\" }}>\r\n                    Event Title: {post.title}\r\n                    <Button\r\n                      style={{ marginLeft: \"1.5rem\" }}\r\n                      color=\"secondary\"\r\n                      variant=\"outlined\"\r\n                      onClick={() => deleteEventHandler(post._id)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </Box>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </main>\r\n      <Grid container spacing={4} className={classes.mainGrid}></Grid>\r\n      <Grid item style={{ marginTop: 10 }}>\r\n        {\" \"}\r\n        {errorMessage ? (\r\n          <Alert\r\n            style={{ marginTop: 10, marginBottom: \"5rem\" }}\r\n            variant=\"outlined\"\r\n            severity=\"error\"\r\n          >\r\n            {\" \"}\r\n            Missing required information\r\n          </Alert>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Grid>\r\n      <Grid item style={{ marginTop: 10, marginBottom: \"5rem\" }}>\r\n        {success ? (\r\n          <Alert\r\n            style={{ marginTop: 10 }}\r\n            variant=\"outlined\"\r\n            severity=\"success\"\r\n          >\r\n            {\" \"}\r\n            Success in creating the event\r\n          </Alert>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","C:\\Projects\\December 2020\\fitness2\\frontend\\src\\pages\\Login\\Login.js",["109"],"import React, { useState } from \"react\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Container from \"@material-ui/core/Container\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport api from \"../../services/api\"\r\nimport { Alert } from \"@material-ui/lab\"\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\nexport default function Login({ history }) {\r\n  const classes = useStyles()\r\n  const { register, handleSubmit } = useForm()\r\n  const [errorMessage, setErrorMessage] = useState(false)\r\n  const [error, setError] = useState(\"false\")\r\n\r\n  const Submit = async (evt) => {\r\n    const { email, password } = evt\r\n    console.log(\"result of the submit\", email, password)\r\n\r\n    const response = await api.post(\"/login\", { email, password })\r\n    const user_id = response.data.user_id || false\r\n    const user = response.data.user || false\r\n\r\n    try {\r\n      if (user && user_id) {\r\n        localStorage.setItem(\"user\", user)\r\n        localStorage.setItem(\"user_id\", user_id)\r\n        history.push(\"/dashboard\")\r\n      } else {\r\n        const { message } = response.data\r\n        setError(true)\r\n        setErrorMessage(message)\r\n\r\n        setTimeout(() => {\r\n          setError(false)\r\n          setErrorMessage(\"\")\r\n        }, 2000)\r\n      }\r\n    } catch (error) {\r\n      setError(true)\r\n      setErrorMessage(\"The server returned an error\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form\r\n          className={classes.form}\r\n          noValidate\r\n          onSubmit={handleSubmit(Submit)}\r\n        >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            inputRef={register}\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            inputRef={register}\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs></Grid>\r\n            <Grid item></Grid>\r\n          </Grid>\r\n        </form>\r\n        {errorMessage ? (\r\n          <Alert style={{ marginTop: 10 }} variant=\"outlined\" severity=\"error\">\r\n            {\" \"}\r\n            {errorMessage}\r\n          </Alert>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <Box mt={8}></Box>\r\n    </Container>\r\n  )\r\n}\r\n","C:\\Projects\\December 2020\\fitness2\\frontend\\src\\pages\\Register\\Register.js",["110"],"import React, { useState } from \"react\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Box from \"@material-ui/core/Box\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Container from \"@material-ui/core/Container\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport api from \"../../services/api\"\r\nimport { Alert } from \"@material-ui/lab\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}))\r\n\r\nexport default function Register({ history }) {\r\n  const classes = useStyles()\r\n  const [errorMessage, setErrorMessage] = useState(false)\r\n  const [error, setError] = useState(\"false\")\r\n  const { register, handleSubmit } = useForm()\r\n  const Submit = async (evt) => {\r\n    const { email, password, firstName, lastName } = evt\r\n\r\n    console.log(\"result of the submit\", email, firstName, lastName)\r\n    if (\r\n      email !== \"\" &&\r\n      password !== \"\" &&\r\n      firstName !== \"\" &&\r\n      lastName !== \"\"\r\n    ) {\r\n      const response = await api.post(\"/user/register\", {\r\n        email,\r\n        password,\r\n        firstName,\r\n        lastName,\r\n      })\r\n      const user = response.data.user || false\r\n      const user_id = response.data.user_id || false\r\n\r\n      if (user_id && user) {\r\n        localStorage.setItem(\"user\", user)\r\n        localStorage.setItem(\"user_id\", user_id)\r\n        history.push(\"/dashboard\")\r\n      } else {\r\n        const { message } = response.data\r\n        setError(true)\r\n        setErrorMessage(message)\r\n        setTimeout(() => {\r\n          setError(false)\r\n          setErrorMessage(\"\")\r\n        }, 2000)\r\n      }\r\n    } else {\r\n      setError(true)\r\n      setErrorMessage(\"Please fill in all the fields\")\r\n      setTimeout(() => {\r\n        setError(false)\r\n        setErrorMessage(\"\")\r\n      }, 2000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form\r\n          className={classes.form}\r\n          noValidate\r\n          onSubmit={handleSubmit(Submit)}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                inputRef={register}\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                inputRef={register}\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                inputRef={register}\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                inputRef={register}\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}></Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item></Grid>\r\n          </Grid>\r\n        </form>\r\n        {errorMessage ? (\r\n          <Alert style={{ marginTop: 10 }} variant=\"outlined\" severity=\"error\">\r\n            {\" \"}\r\n            {errorMessage}\r\n          </Alert>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <Box mt={5}></Box>\r\n    </Container>\r\n  )\r\n}\r\n","C:\\Projects\\December 2020\\fitness2\\frontend\\src\\pages\\Dashboard\\EventsForm.js",["111","112","113","114","115","116"],"import React, { useEffect, useState } from \"react\"\nimport api from \"../../services/api\"\nimport useStyles from \"../styles\"\nimport {\n  Box,\n  Button,\n  Grid,\n  Menu,\n  MenuItem,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\"\nimport FileBase from \"react-file-base64\"\nimport { useForm } from \"react-hook-form\"\nimport { Alert } from \"@material-ui/lab\"\n\nexport default function Dashboard({ history }) {\n  const [postData, setPostData] = useState({ selectedFile: \"\" })\n  const [errorMessage, setErrorMessage] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const { register, handleSubmit } = useForm()\n  const user = localStorage.getItem(\"user\")\n\n  useEffect(() => {\n    if (!user) history.push(\"/login\")\n  }, [])\n\n  const Submit = async (evt) => {\n    const { title, description, price, sport, date } = evt\n    const { selectedFile } = postData\n\n    const eventData = Object.assign(evt, postData)\n\n    try {\n      if (\n        title !== \"\" &&\n        description !== \"\" &&\n        price !== \"\" &&\n        sport !== \"\" &&\n        date !== \"\" &&\n        selectedFile !== null\n      ) {\n        const response = await api.post(\"/event\", eventData, {\n          headers: { user },\n        })\n        setSuccess(true)\n        setTimeout(() => {\n          setSuccess(false)\n        }, 2000)\n      } else {\n        setErrorMessage(true)\n        setTimeout(() => {\n          setErrorMessage(false)\n        }, 2000)\n      }\n    } catch (error) {\n      Promise.reject(error)\n      console.log(error)\n    }\n    console.log(eventData)\n  }\n\n  const classes = useStyles()\n  return (\n    <Paper className={classes.paper}>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit(Submit)}\n      >\n        <Typography align=\"center\" variant=\"h6\">\n          Creating an Event\n        </Typography>\n        {/* <Grid item>\n          <Button\n            className={classes.buttonSubmit}\n            color=\"primary\"\n            variant=\"contained\"\n            aria-controls=\"simple-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n          >\n            Sport\n          </Button>\n          <Menu\n            id=\"sport\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <MenuItem name=\"cycling\" inputRef={register} onClick={handleClose}>\n              Cycling\n            </MenuItem>\n            <MenuItem name=\"swimming\" inputRef={register} onClick={handleClose}>\n              Swimming\n            </MenuItem>\n            <MenuItem name=\"running\" inputRef={register} onClick={handleClose}>\n              Running\n            </MenuItem>\n          </Menu>\n        </Grid> */}\n        <TextField\n          name=\"sport\"\n          variant=\"outlined\"\n          inputRef={register}\n          label=\"Sport\"\n          fullWidth\n        />{\" \"}\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          inputRef={register}\n          label=\"Title\"\n          fullWidth\n        />{\" \"}\n        <TextField\n          name=\"description\"\n          variant=\"outlined\"\n          inputRef={register}\n          label=\"description\"\n          fullWidth\n        />{\" \"}\n        <TextField\n          name=\"price\"\n          variant=\"outlined\"\n          inputRef={register}\n          label=\"Event Price £0.00\"\n          fullWidth\n        />{\" \"}\n        <TextField\n          name=\"date\"\n          variant=\"outlined\"\n          inputRef={register}\n          fullWidth\n          type=\"date\"\n        />{\" \"}\n        <div className={classes.fileInput}>\n          <FileBase\n            type=\"file\"\n            // name=\"file\"\n            multiple={false}\n            // inputRef={register}\n            onDone={({ base64 }) =>\n              setPostData({ ...postData, selectedFile: base64 })\n            }\n          />\n\n          <Button\n            className={classes.buttonSubmit}\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            fullWidth\n          >\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"large\"\n            onClick={() => history.push(\"/dashboard\")}\n            fullWidth\n          >\n            Dashboard\n          </Button>\n        </div>\n      </form>\n      {errorMessage ? (\n        <Alert style={{ marginTop: 10 }} variant=\"outlined\" severity=\"error\">\n          {\" \"}\n          Missing required information\n        </Alert>\n      ) : (\n        \"\"\n      )}\n      {success ? (\n        <Alert style={{ marginTop: 10 }} variant=\"outlined\" severity=\"success\">\n          {\" \"}\n          Success in creating the event\n        </Alert>\n      ) : (\n        \"\"\n      )}\n    </Paper>\n  )\n}\n","C:\\Projects\\December 2020\\fitness2\\frontend\\src\\services\\api.js",[],"C:\\Projects\\December 2020\\fitness2\\frontend\\src\\pages\\styles.js",[],"C:\\Projects\\December 2020\\fitness2\\frontend\\src\\pages\\Dashboard\\FeaturedPost.js",["117","118","119"],"import React, { useEffect, useState } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\"\r\nimport CardContent from \"@material-ui/core/CardContent\"\r\nimport CardMedia from \"@material-ui/core/CardMedia\"\r\nimport moment from \"moment\"\r\nimport { Button } from \"@material-ui/core\"\r\n// import { Button } from \"@material-ui/core\"\r\n// import api from \"../../services/api\"\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    display: \"flex\",\r\n  },\r\n  cardDetails: {\r\n    flex: 1,\r\n  },\r\n  cardMedia: {\r\n    width: 160,\r\n  },\r\n})\r\n\r\nexport default function FeaturedPost(props) {\r\n  const classes = useStyles()\r\n  const { post, user_id } = props\r\n  // const [events, setEvents] = useState([])\r\n\r\n  // useEffect(() => {\r\n  //   getEvents()\r\n  // }, [])\r\n\r\n  // const getEvents = async (filter) => {\r\n  //   const url = filter ? `/dashboard/${filter}` : \"/dashboard\"\r\n\r\n  //   const response = await api.get(url, { headers: { user_id } })\r\n\r\n  //   setEvents(response.data)\r\n  // }\r\n  // const deleteEventHandler = () => {}\r\n  return (\r\n    <Grid item xs={12} md={6}>\r\n      <CardActionArea component=\"a\" href=\"#\">\r\n        <Card className={classes.card}>\r\n          <CardMedia\r\n            className={classes.cardMedia}\r\n            image={post.thumbnail}\r\n            title={post.imageTitle}\r\n          />\r\n          {/* {events.map((post) =>\r\n            post.user === user_id ? (\r\n              <div>\r\n                <Button\r\n                  color=\"danger\"\r\n                  size=\"sm\"\r\n                  onClick={() => deleteEventHandler(post._id)}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )\r\n          )} */}\r\n          <div className={classes.cardDetails}>\r\n            <CardContent>\r\n              <Typography component=\"h2\" variant=\"h5\">\r\n                {post.title}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                {moment(post.date).format(\"Do MMMM  YYYY\")}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" paragraph>\r\n                {post.description}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                description\r\n              </Typography>\r\n              <Button\r\n                style={{ marginLeft: \"11rem\" }}\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n              >\r\n                Subscribe\r\n              </Button>\r\n            </CardContent>\r\n          </div>\r\n        </Card>\r\n      </CardActionArea>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nFeaturedPost.propTypes = {\r\n  post: PropTypes.object,\r\n}\r\n",{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":37,"column":10,"nodeType":"126","messageId":"127","endLine":37,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":37,"column":10,"nodeType":"126","messageId":"127","endLine":37,"endColumn":15},{"ruleId":"124","severity":1,"message":"128","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":26},{"ruleId":"124","severity":1,"message":"129","line":1,"column":28,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"130","line":27,"column":17,"nodeType":"126","messageId":"127","endLine":27,"endColumn":24},{"ruleId":"124","severity":1,"message":"131","line":5,"column":3,"nodeType":"126","messageId":"127","endLine":5,"endColumn":6},{"ruleId":"124","severity":1,"message":"132","line":7,"column":3,"nodeType":"126","messageId":"127","endLine":7,"endColumn":7},{"ruleId":"124","severity":1,"message":"133","line":8,"column":3,"nodeType":"126","messageId":"127","endLine":8,"endColumn":7},{"ruleId":"124","severity":1,"message":"134","line":9,"column":3,"nodeType":"126","messageId":"127","endLine":9,"endColumn":11},{"ruleId":"135","severity":1,"message":"136","line":27,"column":6,"nodeType":"137","endLine":27,"endColumn":8,"suggestions":"138"},{"ruleId":"124","severity":1,"message":"139","line":44,"column":15,"nodeType":"126","messageId":"127","endLine":44,"endColumn":23},{"ruleId":"135","severity":1,"message":"140","line":21,"column":6,"nodeType":"137","endLine":21,"endColumn":8,"suggestions":"141"},{"ruleId":"124","severity":1,"message":"142","line":24,"column":11,"nodeType":"126","messageId":"127","endLine":24,"endColumn":17},{"ruleId":"120","replacedBy":"143"},{"ruleId":"122","replacedBy":"144"},{"ruleId":"135","severity":1,"message":"140","line":21,"column":6,"nodeType":"137","endLine":21,"endColumn":8,"suggestions":"145"},{"ruleId":"124","severity":1,"message":"142","line":24,"column":11,"nodeType":"126","messageId":"127","endLine":24,"endColumn":17},{"ruleId":"124","severity":1,"message":"125","line":37,"column":10,"nodeType":"126","messageId":"127","endLine":37,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":37,"column":10,"nodeType":"126","messageId":"127","endLine":37,"endColumn":15},{"ruleId":"124","severity":1,"message":"131","line":5,"column":3,"nodeType":"126","messageId":"127","endLine":5,"endColumn":6},{"ruleId":"124","severity":1,"message":"132","line":7,"column":3,"nodeType":"126","messageId":"127","endLine":7,"endColumn":7},{"ruleId":"124","severity":1,"message":"133","line":8,"column":3,"nodeType":"126","messageId":"127","endLine":8,"endColumn":7},{"ruleId":"124","severity":1,"message":"134","line":9,"column":3,"nodeType":"126","messageId":"127","endLine":9,"endColumn":11},{"ruleId":"135","severity":1,"message":"136","line":27,"column":6,"nodeType":"137","endLine":27,"endColumn":8,"suggestions":"146"},{"ruleId":"124","severity":1,"message":"139","line":44,"column":15,"nodeType":"126","messageId":"127","endLine":44,"endColumn":23},{"ruleId":"124","severity":1,"message":"128","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":26},{"ruleId":"124","severity":1,"message":"129","line":1,"column":28,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"130","line":28,"column":17,"nodeType":"126","messageId":"127","endLine":28,"endColumn":24},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'user_id' is assigned a value but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["149"],"'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getEvents'. Either include it or remove the dependency array.",["150"],"'socket' is assigned a value but never used.",["147"],["148"],["151"],["152"],"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"155","fix":"157"},{"desc":"153","fix":"158"},"Update the dependencies array to be: [history, user]",{"range":"159","text":"160"},"Update the dependencies array to be: [getEvents]",{"range":"161","text":"162"},{"range":"163","text":"162"},{"range":"164","text":"160"},[739,741],"[history, user]",[785,787],"[getEvents]",[785,787],[739,741]]